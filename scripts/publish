#!/bin/sh -e

#
# Copyright (c) 2012 Simone Basso <bassosimone@gmail.com>,
#  NEXA Center for Internet & Society at Politecnico di Torino
#
# This file is part of Neubot <http://www.neubot.org/>.
#
# Neubot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Neubot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Neubot.  If not, see <http://www.gnu.org/licenses/>.
#

#
# Publish releases
#

. $HOME/.neubot-publish

if [ -z "$remotedir" -o -z "$scp" -o -z "$server" -o -z "$ssh" ]; then
    echo "error: invalid $HOME/.neubot-publish file" 2>&1
    exit 1
fi

candidate=0
dry=0
remote=$server:$remotedir
stable=0

args=$(getopt nRr $*) || {
    echo "usage: $0 [-nRr] location" 1>&2
    exit 1
}
set -- $args
while [ $# -gt 0 ]; do
    if [ "$1" = "-n" ]; then
        ssh='echo ssh'
        dry=1
        shift
    elif [ "$1" = "-R" ]; then
        stable=1
        shift
    elif [ "$1" = "-r" ]; then
        candidate=1
        shift
    elif [ "$1" = "--" ]; then
        shift
        break
    fi
done
if [ $# -ne 1 ]; then
    echo "error: missing location" 1>&2
    echo "usage: $0 [-nRr] location" 1>&2
    exit 1
fi

#
# Wrapper for scp such that we publish packages
# with the right permissions.
#
doscp()
{
    [ $# -eq 2 ] || {
        echo 'usage: doscp source dest' 2>&1
        exit 1
    }
    if [ $dry = 0 ]; then
        chmod 644 $1
        $scp $1 $2
    else
        echo "scp $1 $2"
    fi
}

VER=0.4.13-rc2
NVER=0.004013002

#
# If we have a MacOSX release, publish it.  We now install in updates/macos/
# but, for backwards compatibility, we also install in updates/ alone.
#
if [ -f $1/macos/$NVER.tar.gz ]; then
    doscp $1/neubot-$VER.pkg.tgz $remote/_packages/

    $ssh $server "install -d $remotedir/updates/macos/"
    for ext in "" .sha256 .sig; do
        doscp $1/macos/$NVER.tar.gz$ext $remote/updates/macos/
        doscp $1/macos/$NVER.tar.gz$ext $remote/updates/
    done

    if [ $candidate = 1 ]; then
        $ssh $server "echo $NVER > $remotedir/updates/macos/testing"
        $ssh $server "echo $NVER > $remotedir/updates/testing"
    fi

    #
    # The default channel name is `latest` and it tracks
    # stable releases.
    #
    if [ $stable = 1 ]; then
        $ssh $server "echo $NVER > $remotedir/updates/macos/latest"
        $ssh $server "echo $NVER > $remotedir/updates/latest"
    fi

fi

#
# If we have a Win32 release, publish it
#
if [ -f $1/neubot-$VER-setup.exe ]; then

    doscp $1/neubot-$VER-setup.exe $remote/_packages/

    # Autoupdates stuff
    $ssh $server "install -d $remotedir/updates/win32/"
    doscp $1/win32/$NVER.tar.gz $remote/updates/win32
    doscp $1/win32/$NVER.tar.gz.sha256 $remote/updates/win32

    if [ $candidate = 1 ]; then
        $ssh $server "echo $NVER > $remotedir/updates/win32/testing"
    fi

    #
    # The default channel name is `latest` and it tracks
    # stable releases.
    #
    if [ $stable = 1 ]; then
        $ssh $server "echo $NVER > $remotedir/updates/win32/latest"
    fi

fi

#
# If we have a source release, publish it
#
if [ -f $1/neubot-$VER.tar.gz ]; then

    for ext in .tar.gz .zip; do
        doscp $1/neubot-$VER$ext $remote/_packages/
    done

fi

#
# If we have a Debian release, publish it
#
if [ -f $1/neubot-$VER-1_all.deb ]; then

    for pkg in neubot neubot-nox; do
        doscp $1/$pkg-$VER-1_all.deb $remote/_packages/
    done

    if [ $candidate = 1 ]; then
        for pkg in neubot-$VER neubot-nox-$VER; do
            $ssh $server ln -f $remotedir/_packages/$pkg-1_all.deb $remotedir/rc
        done
        doscp $1/Release $remote/rc/
        doscp $1/Release.gpg $remote/rc/
        doscp $1/Packages $remote/rc/
        doscp $1/Packages.gz $remote/rc/
    fi

    if [ $stable = 1 ]; then
        for pkg in neubot-$VER neubot-nox-$VER; do
            $ssh $server ln -f $remotedir/_packages/$pkg-1_all.deb $remotedir
        done
        doscp $1/Release $remote/
        doscp $1/Release.gpg $remote/
        doscp $1/Packages $remote/
        doscp $1/Packages.gz $remote/
    fi

fi
