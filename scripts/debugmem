#!/usr/bin/env python

#
# Copyright (c) 2011 Simone Basso <bassosimone@gmail.com>,
#  NEXA Center for Internet & Society at Politecnico di Torino
#
# This file is part of Neubot <http://www.neubot.org/>.
#
# Neubot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Neubot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Neubot.  If not, see <http://www.gnu.org/licenses/>.
#

import getopt
import httplib
import sys
import time

if __name__ == '__main__':
    sys.path.insert(0, '.')

from neubot.compat import json

def main():

    try:
        options, arguments = getopt.getopt(sys.argv[1:], 'a')
    except getopt.error:
        sys.exit('Usage: debugmem [-a]')
    if arguments:
        sys.exit('Usage: debugmem [-a]')

    aflag = False
    for tpl in options:
        if tpl[0] == '-a':
            aflag = True

    odictionary = {}

    while True:

        try:

            connection = httplib.HTTPConnection('127.0.0.1:9774')
            connection.request('GET', '/debug')
            response = connection.getresponse()
            if response.status != 200:
                continue

            body = response.read()
            dictionary = json.loads(body)

            result = {}

            keys = set(dictionary.keys()) | set(odictionary.keys())
            for key in keys:
                if key in dictionary and key in odictionary:
                    diff = dictionary[key] - odictionary[key]
                    if diff:
                        result[key] = diff
                elif key in odictionary:
                    result[key] = - odictionary[key]
                elif key in dictionary:
                    result[key] = dictionary[key]

            json.dump(result, sys.stdout, indent=4)
            sys.stdout.write('\n======\n')

            if not aflag or not odictionary:
                odictionary = dictionary

        except:
            pass

        time.sleep(30)

if __name__ == '__main__':
    main()
