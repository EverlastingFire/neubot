dnl m4/include/aaa_base.m4

dnl
dnl Copyright (c) 2013
dnl     Nexa Center for Internet & Society, Politecnico di Torino (DAUIN)
dnl     and Simone Basso <bassosimone@gmail.com>
dnl
dnl This file is part of Neubot <http://www.neubot.org/>.
dnl
dnl Neubot is free software: you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation, either version 3 of the License, or
dnl (at your option) any later version.
dnl
dnl Neubot is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with Neubot.  If not, see <http://www.gnu.org/licenses/>.
dnl

dnl
dnl Include this file first
dnl

dnl
dnl The macro definition clashes with Python's len() builtin function
dnl
undefine(len)

dnl
dnl NEUBOT_PRODUCT()
dnl
define(`NEUBOT_PRODUCT', ``Neubot/0.4.16.0'')

dnl
dnl NEUBOT_ADJUST_PYTHONPATH()
dnl
define(`NEUBOT_ADJUST_PYTHONPATH',
``if __name__ == "__main__":
    sys.path.insert(0, os.path.dirname(os.path.dirname(
      os.path.abspath(__file__))))
'')

dnl
dnl NEUBOT_PY3_READY()
dnl
define(`NEUBOT_PY3_READY',
`#
# Python3-ready: yes
#
')

dnl
dnl NEUBOT_ERRNO(<variable>)
dnl
define(`NEUBOT_ERRNO', ``$1 = sys.exc_info()[1]'')

dnl
dnl NEUBOT_PERROR(<severity>, <message>, <error>)
dnl
define(`NEUBOT_PERROR', ``logging.$1("$2: %s", $3)'')

#
# Autogenerated
#   from @SOURCE@
#   using @SCRIPT@
#   by @USER@
#
