# bin/win32/neubot
# Copyright (c) 2010 NEXA Center for Internet & Society

# This file is part of Neubot.
#
# Neubot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Neubot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Neubot.  If not, see <http://www.gnu.org/licenses/>.

import ConfigParser
import logging
import os
import os.path
import sys
import time

LOG_FORMAT = "[%(asctime)s] <%(levelname)s> %(message)s"

sys.path.insert(0, ".")
try:
    import neubot
except ImportError:
    logging.error("Could not import NPL (Neubot Python Library)")
    raise

def startup():
    logger = logging.getLogger()
    handler = logging.StreamHandler()
    formatter = logging.Formatter(LOG_FORMAT)
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    logger.setLevel(logging.INFO)
    configparser = ConfigParser.RawConfigParser()
    databasepath = "database.txt"
    if os.environ.has_key("APPDATA"):
        appdata = os.environ["APPDATA"]
        privatedir = appdata + os.sep + "Neubot"
        if os.path.exists(privatedir):
            if not os.path.isdir(privatedir):
                logging.warning("%s: Should be a directory" % privatedir)
                logging.warning("You might want to fix this by hand")
        else:
            os.mkdir(privatedir)
        databasepath = privatedir + os.sep + databasepath
        if os.path.exists(databasepath):
            if not os.path.isfile(databasepath):
                logging.warning("%s: Should be a file" % databasepath)
                logging.warning("You might want to fix this by hand")
        else:
            open(databasepath, "wb")
    else:
        logging.warning("Environment variable %APPDATA%: Not found")
    configparser.set("DEFAULT", "database.path", databasepath)
    neubot.database.init(configparser)
    argv = []
    neubot.auto.main(argv)

if (__name__ == "__main__"):
    startup()
