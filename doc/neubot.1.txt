neubot
^^^^^^

The network neutrality bot
''''''''''''''''''''''''''

..
.. Copyright (c) 2010-2012 Simone Basso <bassosimone@gmail.com>,
..  NEXA Center for Internet & Society at Politecnico di Torino
..
.. This file is part of Neubot <http://www.neubot.org/>.
..
.. Neubot is free software: you can redistribute it and/or modify
.. it under the terms of the GNU General Public License as published by
.. the Free Software Foundation, either version 3 of the License, or
.. (at your option) any later version.
..
.. Neubot is distributed in the hope that it will be useful,
.. but WITHOUT ANY WARRANTY; without even the implied warranty of
.. MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.. GNU General Public License for more details.
..
.. You should have received a copy of the GNU General Public License
.. along with Neubot.  If not, see <http://www.gnu.org/licenses/>.
..

:Manual section: 1
:Date: @DATE@
:Manual group: Neubot manual
:Version: Neubot 0.4.13-rc5

SYNOPSIS
````````

|   **neubot**
|   **neubot** **--help**
|   **neubot** **-V**
|   **neubot** *subcommand* [*option*]... [*argument*]...

DESCRIPTION
```````````

**neubot** measures quality and neutrality of your Internet connection
in the background.  It performs periodic, active transmission tests with
remote test servers and (in future) with neubot instances installed by
other users.  Tests send and receive random data, emulate different
protocols and measure application-level metrics, such as latency and
goodput.  Results are saved on the local computer and published on the
web, allowing for better Internet-access and network-neutrality research.
Since results contain the user IP address and that is personal data in
the European Union, no test is performed until the user gives **neubot**
her consent, as explained in the PRIVACY_ section.

The *first form* of the command (with no arguments) starts **neubot**
if it is not already running and opens the *Web User Interface* in the
default browser.  Note that the browser is not opened: (a) when the
user is **root**, for obvious security reasons; (b) when the environment
does not contain the **DISPLAY** variable, because a graphical browser
is needed.  This form of the command is now *deprecated on UNIX*, and
users should use the *start* and *viewer* subcommands to start **neubot**
and open the Web User Interface respectively.

The *second form* of the command (--help) prints on the standard output
a brief help message that summarizes the synopsis.

The *third form* of the command (-V) prints on the standard output the
version number.

The *fourth form* of the command (subcommand) allows to run the specified
subcommand.  The remainder of this section documents the most commonly
used subcommands.

neubot bittorrent [-v] [-D setting]
  Sends a Web API request (by default to *127.0.0.1:9774*) to the local
  instance of **neubot** running in the background, asking to run a
  bittorrent test immediately.  If it is not possible to communicate
  with the local instance, the subcommand will fallback to running the
  bittorrent test in its own process context.

  The behavior of this subcommand can be controlled using the following
  settings, where the indicated value is the default one:

    agent.api.address=127.0.0.1
      Address where the local **neubot** instance is supposed to
      be listening.

    agent.api.port=9774
      Port where the local **neubot** instance is supposed to be
      listening.

    bittorrent.address=""
      Address to connect to in order to perform the test (client mode)
      or address to listen to (server mode).  When the value equals *""*,
      the subcommand uses *master.neubot.org* (client mode) or *0.0.0.0*
      (server mode).

      When running in client mode, this setting is only effective if
      the test is run in the process context of the subcommand itself.

    bittorrent.daemonize=0
      When on (*nonzero*) the subcommand will detach from the current
      shell and become a daemon.  When off (*0*) the subcommand will
      run in the context of the current shell.

      When running in client mode, this setting is only effective if
      the test is run in the process context of the subcommand itself.

    bittorrent.listen=0
      Run in client (*0*) or in server (*nonzero*) mode.

    bittorrent.negotiate=1
      Turn off (*0*) or on (*nonzero*) negotiation.  Negotiation is the
      procedure that ensures that client and server agree on the test
      parameters, and that keeps the server load under control, by
      keeping clients in queue and allowing only a subset of them to
      perform concurrent tests.

      When running in client mode, this setting is only effective if
      the test is run in the process context of the subcommand itself.

      You typically want this setting to be on, unless you are testing
      the bittorrent client and server.

    bittorrent.negotiate.port=80
      The port to be used for negotiation, both for client and for
      server mode.

      When running in client mode, this setting is only effective if
      the test is run in the process context of the subcommand itself.

    bittorrent.port=6881
      Port to connect to in order to perform the test (client mode)
      or Port to listen to (server mode).

      When running in client mode, this setting is only effective if
      the test is run in the process context of the subcommand itself.

    runner.enabled=1
      When this setting is on (*nonzero*) the subcommand will try to run
      the test in the context of the local instance of **neubot** first,
      and then it will fallback to running the test on its own process
      context if that fails.

      When this setting is off (*zero*) the subcommand will always run
      the test in its own process context.

neubot database [--help] [-f database] [action]
  Perform low level actions on the database or print the database name
  if no action was specified.  The following options are accepted:

    --help
      Prints an help message on the standard output and exits.

    -f database
      Force to use the database at *database* instead of using the
      default one (see `FILES`_ section for more info).

  The following actions are implemented:

    info
      Print the database path.

    delete_all
      Delete all results in the database.

    dump
      Dump to stdout the content of the database in JSON format.

    prune
      Remove results older than one year from the database.

    regen_uuid
      Each **neubot** has its own random unique identifier that is sent
      with results and allows to perform time serie anlysis.  This action
      generates a fresh new random unique identifier.

    show
      Like *dump*, but pretty-prints database content.

neubot privacy [-Pt] [-D setting] [-f database]
  Allows to read privacy policy, test and set privacy settings.  For
  more information on privacy see the PRIVACY_ section.  This subcommand
  accepts the following command line options:

    -D setting
      Allow to set privacy settings in the database.  The following
      privacy settings are defined, along with their default value:

        privacy.informed=""
          Turns on (*nonzero*) or off (*0*) the corresponding privacy
          setting in the database, unless the setting is unspecified
          (*""*).

        privacy.can_collect=""
          Turns on (*nonzero*) or off (*0*) the corresponding privacy
          setting in the database, unless the setting is unspecified
          (*""*).

        privacy.can_publish=""
          Turns on (*nonzero*) or off (*0*) the corresponding privacy
          setting in the database, unless the setting is unspecified
          (*""*).

      Note that all privacy settings must be on for **neubot** to be
      allowed to run automatic tests.

      Note that this command changes the database, but changes are not
      propagated to the **neubot** instance running in background.

    -f database
      Force to use the database at *database* instead of using the
      default one (see `FILES`_ section for more info).

    -P
      Prints privacy policy on the standard output.

    -t
      Test mode.  Exits with success (exit value *0*) if privacy
      settings allow to run periodic tests.  Exits with failure (exit
      value *nonzero*) otherwise.

neubot speedtest [-v] [-D setting]
  Sends a Web API request (by default to *127.0.0.1:9774*) to the local
  instance of **neubot** running in the background, asking to run a
  speedtest test immediately.  If it is not possible to communicate
  with the local instance, the subcommand will fallback to running the
  bittorrent test in its own process context.

  The behavior of this subcommand can be controlled using the following
  settings, where the indicated value is the default one:

    agent.api.address=127.0.0.1
      Address where the local **neubot** instance is supposed to
      be listening.

    agent.api.port=9774
      Port where the local **neubot** instance is supposed to be
      listening.

    runner.enabled=1
      When this setting is on (*nonzero*) the subcommand will try to run
      the test in the context of the local instance of **neubot** first,
      and then it will fallback to running the test on its own process
      context if that fails.

      When this setting is off (*zero*) the subcommand will always run
      the test in its own process context.

    speedtest.uri=uri
      URI of the negotiate server to perform the negotiation with.

neubot start
  Starts **neubot** in the background.  The program will daemonize,
  drop privileges (if needed), *listen()* for Web API requests (by
  default at *127.0.0.1:9774*), and run periodic tests, if the user has
  given her consent.  Typically, this form of the command is invoked by
  startup scripts and the user should not need to run it directly.

neubot status
  Issues a Web API request (by default to *127.0.0.1:9774*) to check
  whether **neubot** is running, and prints the result on the standard
  output.  When the result is is "not running", it means that either
  *connect()* failed or the response is not the expected one (meaning that
  there isn't a **neubot** process listening on that address and port).

neubot stop
  Issues a Web API command (by default to *127.0.0.1:9774*) that forces
  **neubot** to exit.

neubot viewer [-f file] [-O option]
  Starts a viewer application that embeds the Web User Interface, if
  the dependencies are installed.  By default, the viewer connects to
  *127.0.0.1:9774*, but that can be changed specifying an alternate
  configuration file or overriding options from command line.

  Accepts the following command line options:

    -f file
      Forces to read settings from *file*, instead of using the default
      configuration file ``/etc/neubot/api``.  If the file does not
      exist or contains errors, this subcommand will ignore it and will
      continue with default settings.

      The following options are recognized (here the options are
      represented together with their default values):

        address 127.0.0.1
          Address where the Web API is supposed to be listening.

        port 9774
          Port where the Web API is supposed to be listening.

    -O option
      Overrides configuration file option from the command line,
      see description of **-f** flag for the list of available
      options.

PRIVACY
```````

.. :Version: 2.0.3

The Neubot project is a research effort that aims to study the quality
and neutrality of ordinary users' Internet connections, to rebalance the
information asymmetry between them and Service Providers.  The Neubot
software (i) *measures* the quality and neutrality of your Internet
connection.  The raw measurement results are (ii) *collected* on the
measurement servers for research purposes and (iii) *published*, to allow
other individuals and institutions to reuse them for research purposes.

To *measure* the quality and neutrality of your Internet connection,
the Neubot software does not monitor or analyze your Internet traffic.
It just uses a fraction of your connection capacity to perform background
transmission tests, sending and/or receiving random data.  The results
contain the measured performance metrics, such as the download speed,
or the latency, as well as your computer load, as a percentage, and
*your Internet address*.

The Internet address is paramount because it allows to *infer your Internet
Service Provider* and to have a rough idea of *your location*, allowing to
put the results in context.  The Neubot project needs to *collect* it
to study the data and wants to *publish* it to enable other individuals
and institutions to carry alternative studies and/or peer-review its
measurements and data analysis methodology.  This is coherent with the
policy of the distributed server platform that empowers the Neubot
project, Measurement Lab (M-Lab), which requires all results to be
released as open data [1]_.

You are reading this privacy policy because Neubot is developed in the
European Union, where there is consensus that Internet addresses are
*personal data*.  This means that the Neubot project cannot store, process
or publish your address without your prior *informed consent*, under the
provisions of the "Codice in materia di protezione dei dati personali"
(Decree 196/03) [2]_.  In accordance with the law, data controller is the
NEXA Center for Internet & Society [3]_, represented by its co-director Juan
Carlos De Martin.

Via its web interface [4]_, the Neubot software asks you (a) to explicitly
assert that you are *informed*, i.e. that you have read the privacy
policy, (b) to give it the permission to *collect* and (c) *publish* your
IP address.  If you don't assert (a) and you don't give the permission
to do (b) and (c), Neubot cannot run tests because, if it did, it would
violate privacy laws and/or Measurement Lab policy.

The data controller guarantees you the rights as per Art. 7 of the
above-mentioned Decree 196/03.  Basically, you have total control over
you personal data, and you can, for example, inquire Neubot to remove
your Internet address from its data sets.  To exercise your rights, please
write to <privacy@neubot.org> or to "NEXA Center for Internet & Society,
Dipartimento di Automatica e Infomatica, Politecnico di Torino, Corso Duca
degli Abruzzi 24, 10129 Turin, ITALY."

.. [1] http://www.measurementlab.net/about
.. [2] http://www.garanteprivacy.it/garante/doc.jsp?ID=1311248
.. [3] http://nexa.polito.it/
.. [4] http://127.0.0.1:9774/privacy.html

EXAMPLES
````````

In this section we will follow the well-established convention of
representing the unprivileged user prompt with *$* and the privileged
user prompt with *#*.

Run ondemand speedtest test:

|
|    $ neubot speedtest

Run ondemand BitTorrent test:

|
|    $ neubot bittorrent

Start **neubot**:

|
|    # neubot start

Stop **neubot**:

|
|    $ neubot stop

Run the client-side components of **neubot** in foreground and in debug
mode for debugging purposes:

|
|    $ neubot agent -v -D agent.daemonize=no

Export system-wide results to JSON:

|
|    # neubot database dump > output.json

Track **neubot** state using the command line:

|
|    $ neubot api.client

Run Neubot in-place from the sources directory:

|
|    $ ./bin/neubot *comand*

FILES
`````

Neubot can be installed below many different prefixes (the most common
ones being **/usr/local** and **/usr**). In this section of the manual
we assume that it has been installed below **/usr/local**:

/usr/local/bin/neubot
  The neubot program, a simple python script that imports neubot and passes
  the control to **neubot.main** module.

/usr/local/share/neubot/*
  Location where neubot python modules are installed.

/usr/local/share/neubot/main/__init__.py
  Well-known location of the real main() of Neubot.  This is the
  standard entry point to Neubot.

/usr/local/share/neubot/updater/unix.py
  Well-known location of the updater daemon for Unix.  This is an
  alternative entry point to Neubot.

/var/neubot/database.sqlite3
  System-wide results database for UNIX systems (except Linux),
  created when the neubot daemon starts for the first time.

/var/lib/neubot/database.sqlite3
  System-wide results database for Linux systems, created when the
  neubot daemon starts for the first time.

BUGS
````

If the default browser is a textual browser and a graphical environment
is available, Neubot will start the web user interface into the
textual browser.  Nine times out of ten this results into an unusable
web user interface because most textual browser do not support
javascript.

Neubot is reported to be "not running" by *neubot start* also when
the response is not *200 Ok*.

AUTHOR
``````

Neubot authors are:

|
| Simone Basso                  <bassosimone@gmail.com>
| Antonio Servetti              <antonio.servetti@polito.it>

The following people have contributed patches to the project:

|
| Alessio Palmero Aprosio	<alessio@apnetwork.it>
| Roberto D'Auria		<everlastingfire@autistici.org>
| Marco Scopesi			<marco.scopesi@gmail.com>

The following people have helped with internationalization:

|
| Claudio Artusio               <claudioartusio@gmail.com>

COPYRIGHT
`````````

| Copyright (c) 2010-2012 NEXA Center for Internet & Society
|   at Politecnico di Torino <http://nexa.polito.it/>

| Neubot is free software: you can redistribute it and/or
| modify it under the terms of the GNU General Public License
| as published by the Free Software Foundation, either version
| 3 of the License, or (at your option) any later version.

SEE ALSO
````````

| ``Neubot | The network neutrality bot <http://www.neubot.org/>``
