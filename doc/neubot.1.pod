=head1 NAME

neubot - Network neutrality bot

=head1 SYNOPSYS

B<neubot> [B<--help>] [B<-bEqVv>] [B<-I> I<dir>] [B<-O> I<option>=I<value>]
       [B<-P> I<pidfile>] [I<command> [I<option> ...]]

=head1 DESCRIPTION

The "Network Neutrality Bot" (Neubot) is a distributed peer-to-peer
program that measures the Quality of Service of Internet access and
focus on detecting potential violations of the "Network Neutrality"
principle.  Neubot performs background transmission tests with different
locations, using various applicative protocols, and sends the results
to a collection of centralized servers.  The results are published and
this should rebalance (at least in part) the deep information asymmetry
between Internet Service Providers and ordinary users.

Options, that let users modify slightly the default behavior of the
neubot command, are documented below in a separate section.

Commands are not (yet) documented in this manual page.  You should not
need to specify a command, because commands are the interface to play
with neubot internals.

A running neubot executes an infinite loop composed of the following
six steps: rendezvous, negotiation, testing, reporting, peering, and
sleeping.

=head2 Rendezvous

The neubot periodically contacts I<master.neubot.org>, checks for software
updates, and retrieves the list of available tests.  If there are updates,
neubot prints a message on console and/or on the system logger (it
depends on whether it is running in interactive mode or in background.)
Each entry in the list contains at least the applicative protocol to
use and the address and the port of the machine that provides the test.
The response from I<master.neubot.org> also contains the address and
the port of the machine to report results to.

=head2 Negotiation

If there are available tests, neubot picks one of them at random,
and follows-up with the machine providing the test, to negotiate the
test parameters, including the lenght and the direction (e.g. upload,
download) of the transmission.  The request contains the proposed values
for the test parameters and the proposed unique identifier for the test.

The peer machine response depends on its status.  If it is busy the
response indicates that the connecting neubot should retry later.
Otherwise, it contains the negotiated value for the test parameters
(which is either the proposed one or an acceptable one if the proposed
was not in the supported range,) and the address and the port to perform
the actual test with (usually the same address but another port.)

=head2 Testing

When the two neubots are ready the transmission test starts and they
measure the hosting computer load and some protocol specific metrics
that depend on the protocol characteristics.

=head2 Reporting

At the end of the transmission test the two neubots reports the results
to the central servers.

=head2 Peering

TBA

=head2 Sleeping

The neubot sleeps for a certain amount of time and then the loop restarts
from the rendezvous.

=head1 OPTIONS

=over 8

=item B<-b>

Background mode, become a daemon.

=item B<-E>

Do not read any configuration file.

=item B<--help>

Print an help screen and exit.

=item B<-I> I<dir>

Prepend I<dir> to Python search path.

=item B<-O> I<option>=I<value>

Set the I<value> of the specified I<option>.

=item B<-P> I<pidfile>

Pidfile to use in background mode.

=item B<-q>

Be more quiet, log less messages.

=item B<-V>

Print version number and exit.

=item B<-v>

Be more verbose, log more messages.

=back

=head1 EXAMPLES

Run neubot in interactive mode:

    neubot

Same as above, but running in-place from the sources directory:

    ./bin/unix/neubot -I.

Run neubot in verbose mode to get diagnostic messages:

    neubot -v

Force neubot to save results to I</some/file>:

    neubot -O database.path=/some/file

Run neubot in background:

    neubot -b

Invoke neubot from I</etc/rc.local>:

    if test -x /usr/local/bin/neubot; then
      echo 'Starting neubot: neubot -b'
      /usr/local/bin/neubot -b
    fi

=head1 FILES

Neubot is installed in $PREFIX, where $PREFIX is I</usr/local> when
installing from sources, and I</usr> when installing with a package
manager.  In this section we will use $PREFIX for generality.

=over 4

=item $PREFIX/bin/neubot

The neubot program, that locates, imports, and invokes commands implemented
in the neubot python library.

=item $PREFIX/share/neubot/*

The neubot python library, that is the core of neubot.

=item /etc/neubot/

The system-wide configuration directory.

=item /var/neubot/

The system-wide data directory.

=item $HOME/.neubot/

The per-user configuration and data directory.

=back

=head1 AUTHOR

Simone Basso <bassosimone@gmail.com>

=head1 COPYRIGHT

 Copyright (c) 2010 NEXA Center for Internet & Society.

 Neubot is free software: you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation, either version
 3 of the License, or (at your option) any later version.

=head1 SEE ALSO

=over 2

=item The Neubot Project L<http://nexa.polito.it/neubot>

=item The Neubot Archives L<http://www.neubot.org:8080/>

=back

=cut
